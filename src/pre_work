#!/usr/bin/env python
# -*- coding: utf-8 -*-
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# @file: data_analysis.py

from __future__ import division
import sys

import ngram
import nltk
import string
import sqlite3
from config import *

pjoin = os.path.join


def count():
    """
    Results:

    train: 11701890
    existed: 355
    dev: 1000
    existed ratio: 0.355
    """
    max_len = 0;
    fileName = train_click_log
    """fileName = '/home/lql/python/input.txt'"""
    with open(train_click_log, 'r') as f:
        for line in f:
            arr = line.strip().split('\t')
            query = arr[1].strip()
            l = len(query)
            if l > max_len:
                max_len = l
    print max_len
def make_qitable():
    print 'make qitable'
    qit = '../database/query_image_table.db3'
    con = sqlite3.connect(qit)
    cur = con.cursor()
    cur.execute('CREATE TABLE qit(query TEXT, image TEXT, click INTEGER)')
    con.commit()
    fileName = train_click_log
    with open(train_click_log, 'r') as f:
        arr = line.strip().split('\t')
        image = '"' + arr[0].strip() + '"'
        query = '"' + arr[1].strip() + '"'
        click = string.atol(arr[2].strip())
        commond = 'INSERT INTO qit(query, image, click) VALUES(' + query + ',' + image + ',' + click + ')'
        cur.execute(command)
    con.commit()
    """
def test_qitable():
    print 'test qitable'
    qit = 'query_image_table.db3'
    con = sqlite3.connect(qit)
    cur = con.cursor()
"""
if __name__ == "__main__":
    # query_existed()
    # query_search_test()
    make_qitable()
   """ test_qitable()"""